"""add table address, color, category and product

Revision ID: 49fe31781fe5
Revises: 0c043a6c57f5
Create Date: 2025-07-09 12:25:07.120235

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '49fe31781fe5'
down_revision: Union[str, None] = '0c043a6c57f5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tbl_category',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('category_name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('category_id'),
    sa.UniqueConstraint('category_name')
    )
    op.create_table('tbl_color',
    sa.Column('color_id', sa.Integer(), nullable=False),
    sa.Column('color_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('color_id'),
    sa.UniqueConstraint('color_name')
    )
    op.create_table('tbl_address',
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('address_country', sa.String(length=100), nullable=False),
    sa.Column('address_zip_code', sa.String(length=20), nullable=False),
    sa.Column('address_state', sa.String(length=100), nullable=False),
    sa.Column('address_city', sa.String(length=100), nullable=False),
    sa.Column('address_neighborhood', sa.String(length=100), nullable=False),
    sa.Column('address_street', sa.String(length=255), nullable=False),
    sa.Column('address_number', sa.String(length=5), nullable=False),
    sa.Column('address_complement', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['tbl_user.user_id'], onupdate='RESTRICT', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('address_id')
    )
    op.create_table('tbl_product',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('product_name', sa.String(length=100), nullable=False),
    sa.Column('product_price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('product_description', sa.String(length=500), nullable=True),
    sa.Column('product_condition', sa.Enum('new', 'used', name='productcondition'), nullable=False),
    sa.Column('product_gender', sa.Enum('female', 'male', 'unisex', name='productgender'), nullable=False),
    sa.Column('product_size', sa.Enum('XS', 'S', 'M', 'L', 'XL', 'XXL', 'XXXL', '_34', '_36', '_38', '_40', '_42', '_44', '_46', '_48', 'other', name='product_size'), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('color_id', sa.Integer(), nullable=False),
    sa.Column('seller_id', sa.Integer(), nullable=False),
    sa.Column('product_status', sa.Enum('available', 'unavailable', name='productstatus'), server_default='available', nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['tbl_category.category_id'], onupdate='RESTRICT', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['color_id'], ['tbl_color.color_id'], onupdate='RESTRICT', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['seller_id'], ['tbl_seller.seller_id'], onupdate='RESTRICT', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('product_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tbl_product')
    op.drop_table('tbl_address')
    op.drop_table('tbl_color')
    op.drop_table('tbl_category')
    # ### end Alembic commands ###
